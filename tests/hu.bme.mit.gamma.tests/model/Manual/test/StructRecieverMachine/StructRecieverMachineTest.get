import "model/StructRecieverMachine/StructRecieverMachineWrapper"

trace StructRecieverMachineTest of StructRecieverMachineWrapper

step {
	act {
		reset
	}
	assert {
		variable structRecieverMachine.cnt = 0;
		variable structRecieverMachine.ss = #SampleStruct {
			val := 0
		};
	}
}
step {
	act {
		raise portA.message_SampleStruct(#SampleStruct {
			val := 0			
		})
		schedule component
	}
	assert {
		variable structRecieverMachine.cnt = 0;
		variable structRecieverMachine.ss = #SampleStruct {
			val := 0
		};
	}
}
step {
	act {
		raise portA.message_SampleStruct(#SampleStruct {
			val := 1			
		})
		schedule component
	}
	assert {
		variable structRecieverMachine.cnt = 1;
		variable structRecieverMachine.ss = #SampleStruct {
			val := 1
		};
	}
}
step {
	act {
		raise portA.message_SampleStruct(#SampleStruct {
			val := 5			
		})
		schedule component
	}
	assert {
		variable structRecieverMachine.cnt = 6;
		variable structRecieverMachine.ss = #SampleStruct {
			val := 6
		};
	}
}
step {
	act {
		raise portA.message_SampleStruct(#SampleStruct {
			val := -2			
		})
		schedule component
	}
	assert {
		variable structRecieverMachine.cnt = 4;
		variable structRecieverMachine.ss = #SampleStruct {
			val := 4
		};
	}
}