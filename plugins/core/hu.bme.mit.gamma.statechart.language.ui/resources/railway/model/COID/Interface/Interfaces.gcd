package interfaces
import "Types/Types.gcd"
interface StateMachine_Interface_For_VALTO_OAK {
	in event RP_OAKKI
	in event RP_OAKBE
	out event POS_NYUGTA
	out event NEG_NYUGTA
}
interface COIDOutSignalInterface {
	out /*persistent*/ event O_COID(O_COIDValue : Activeness)
}
interface P_N_Interface {
	out /*persistent*/ event p(pValue : MyBool)
	out /*persistent*/ event n(nValue : MyBool)
}
interface E_T_F_Interface {
	out event e(eValue : MyBool)
	out event t(tValue : MyBool)
	out event f(fValue : MyBool)
}
interface I_Toggle {
	out event toggle
}
interface I_Timeout {
	out event ^timeout
}
interface I_Execute {
	out event ^execute
}