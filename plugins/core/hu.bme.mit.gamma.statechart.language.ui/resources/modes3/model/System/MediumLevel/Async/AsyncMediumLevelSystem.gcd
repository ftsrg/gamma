package mediumlevel_eightsections_async_system
import "Interface/Interfaces"
import "Train/Async/AsyncTrain"
import "SafetyLogic/AsyncMediumLevelSafetyLogic"
async AsyncMediumLevelSystem [
	port Train1Control : requires TrainControl
	port Train2Control : requires TrainControl
] {
	component train : AsyncTrain(1, 5)
	component track : AsyncMediumLevelSafetyLogic
	bind Train1Control -> train.Train1
	bind Train2Control -> train.Train2
	// Train : high level connected, low level not connected
	channel [ train.TrainControl1 ] -o)- [ track.Train1 ]
	channel [ train.TrainControl2 ] -o)- [ track.Train2 ]
	channel [ train.TrainControl3 ] -o)- [ track.Train3 ]
	channel [ train.TrainControl4 ] -o)- [ track.Train4 ]
	channel [ train.TrainControl5 ] -o)- [ track.Train5 ]
	channel [ train.TrainControl6 ] -o)- [ track.Train6 ]
	channel [ train.TrainControl7 ] -o)- [ track.Train7 ]
	channel [ train.TrainControl8 ] -o)- [ track.Train8 ]
	channel [ track.SectionControl1 ] -o)- [ train.HighLevelSectionControl1 ]
	channel [ track.SectionControl2 ] -o)- [ train.HighLevelSectionControl2 ]
	channel [ track.SectionControl3 ] -o)- [ train.HighLevelSectionControl3 ]
	channel [ track.SectionControl4 ] -o)- [ train.HighLevelSectionControl4 ]
	channel [ track.SectionControl5 ] -o)- [ train.HighLevelSectionControl5 ]
	channel [ track.SectionControl6 ] -o)- [ train.HighLevelSectionControl6 ]
	channel [ track.SectionControl7 ] -o)- [ train.HighLevelSectionControl7 ]
	channel [ track.SectionControl8 ] -o)- [ train.HighLevelSectionControl8 ]
}