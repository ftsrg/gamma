<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="model" nsURI="http://www.mit.bme.hu/gamma/expression/Model"
    nsPrefix="hu.bme.mit.gamma.expression">
  <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CommentableElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="comments" upperBound="-1"
        eType="#//Comment" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Comment">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="comment" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ParametricElement" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameterDeclarations"
        upperBound="-1" eType="#//ParameterDeclaration" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ArgumentedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" upperBound="-1"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExpressionPackage" eSuperTypes="#//NamedElement #//ParametricElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="typeDeclarations" upperBound="-1"
        eType="#//TypeDeclaration" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="constantDeclarations" upperBound="-1"
        eType="#//ConstantDeclaration" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="functionDeclarations" upperBound="-1"
        eType="#//FunctionDeclaration" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="basicConstraintDefinitions"
        upperBound="-1" eType="#//BasicConstraintDefinition" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InitializableElement" abstract="true"
      eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Declaration" abstract="true" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//Type" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ValueDeclaration" eSuperTypes="#//Declaration"/>
  <eClassifiers xsi:type="ecore:EClass" name="VariableDeclaration" eSuperTypes="#//ValueDeclaration #//InitializableElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotations" upperBound="-1"
        eType="#//VariableDeclarationAnnotation" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FunctionDeclaration" eSuperTypes="#//Declaration #//ParametricElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="TypeDeclaration" eSuperTypes="#//Declaration"/>
  <eClassifiers xsi:type="ecore:EClass" name="ConstantDeclaration" eSuperTypes="#//ValueDeclaration #//InitializableElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="ParameterDeclaration" eSuperTypes="#//ValueDeclaration">
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotations" upperBound="-1"
        eType="#//ParameterDeclarationAnnotation" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FieldDeclaration" eSuperTypes="#//ValueDeclaration"/>
  <eClassifiers xsi:type="ecore:EClass" name="LambdaDeclaration" eSuperTypes="#//InitializableElement #//FunctionDeclaration"/>
  <eClassifiers xsi:type="ecore:EClass" name="Type"/>
  <eClassifiers xsi:type="ecore:EClass" name="TypeReference" eSuperTypes="#//Type">
    <eStructuralFeatures xsi:type="ecore:EReference" name="reference" eType="#//TypeDeclaration"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TypeDefinition" eSuperTypes="#//Type"/>
  <eClassifiers xsi:type="ecore:EClass" name="NumericalTypeDefinition" eSuperTypes="#//TypeDefinition"/>
  <eClassifiers xsi:type="ecore:EClass" name="CompositeTypeDefinition" eSuperTypes="#//TypeDefinition"/>
  <eClassifiers xsi:type="ecore:EClass" name="VoidTypeDefinition" eSuperTypes="#//TypeDefinition"/>
  <eClassifiers xsi:type="ecore:EClass" name="BooleanTypeDefinition" eSuperTypes="#//TypeDefinition"/>
  <eClassifiers xsi:type="ecore:EClass" name="IntegerTypeDefinition" eSuperTypes="#//NumericalTypeDefinition"/>
  <eClassifiers xsi:type="ecore:EClass" name="RationalTypeDefinition" eSuperTypes="#//NumericalTypeDefinition"/>
  <eClassifiers xsi:type="ecore:EClass" name="DecimalTypeDefinition" eSuperTypes="#//NumericalTypeDefinition"/>
  <eClassifiers xsi:type="ecore:EClass" name="SubrangeTypeDefinition" eSuperTypes="#//NumericalTypeDefinition #//CompositeTypeDefinition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="lowerBound" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="upperBound" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EnumerableTypeDefinition" abstract="true"
      eSuperTypes="#//CompositeTypeDefinition"/>
  <eClassifiers xsi:type="ecore:EClass" name="EnumerationTypeDefinition" eSuperTypes="#//EnumerableTypeDefinition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="literals" upperBound="-1"
        eType="#//EnumerationLiteralDefinition" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteralDefinition" eSuperTypes="#//NamedElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="ArrayTypeDefinition" eSuperTypes="#//EnumerableTypeDefinition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="elementType" lowerBound="1"
        eType="#//Type" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="size" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IntegerRangeTypeDefinition" eSuperTypes="#//EnumerableTypeDefinition"/>
  <eClassifiers xsi:type="ecore:EClass" name="FunctionTypeDefinition" eSuperTypes="#//CompositeTypeDefinition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameterTypes" upperBound="-1"
        eType="#//Type" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="returnType" lowerBound="1"
        eType="#//Type" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RecordTypeDefinition" eSuperTypes="#//CompositeTypeDefinition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="fieldDeclarations" upperBound="-1"
        eType="#//FieldDeclaration" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConstraintDefinition" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" lowerBound="1"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BasicConstraintDefinition" eSuperTypes="#//ConstraintDefinition"/>
  <eClassifiers xsi:type="ecore:EClass" name="Expression" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="NullaryExpression" abstract="true" eSuperTypes="#//Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="UnaryExpression" abstract="true" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="operand" lowerBound="1"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BinaryExpression" abstract="true" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="leftOperand" lowerBound="1"
        eType="#//Expression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rightOperand" lowerBound="1"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MultiaryExpression" abstract="true"
      eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="operands" upperBound="-1"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ArithmeticExpression" abstract="true"
      eSuperTypes="#//Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="LogicExpression" eSuperTypes="#//Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="BooleanExpression" abstract="true" eSuperTypes="#//LogicExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="PredicateExpression" abstract="true"
      eSuperTypes="#//LogicExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="OpaqueExpression" eSuperTypes="#//NullaryExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="expression" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ElseExpression" eSuperTypes="#//NullaryExpression #//LogicExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="DefaultExpression" eSuperTypes="#//ElseExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="QuantifierExpression" abstract="true"
      eSuperTypes="#//UnaryExpression #//ParametricElement #//LogicExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralExpression" abstract="true" eSuperTypes="#//Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="EnumerableExpression" abstract="true"
      eSuperTypes="#//Expression"/>
  <eClassifiers xsi:type="ecore:EClass" name="ArithmeticLiteralExpression" abstract="true"
      eSuperTypes="#//NullaryExpression #//LiteralExpression #//ArithmeticExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="IntegerLiteralExpression" eSuperTypes="#//ArithmeticLiteralExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBigInteger"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DecimalLiteralExpression" eSuperTypes="#//ArithmeticLiteralExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBigDecimal"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RationalLiteralExpression" eSuperTypes="#//ArithmeticLiteralExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numerator" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBigInteger"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="denominator" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBigInteger"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BooleanLiteralExpression" abstract="true"
      eSuperTypes="#//NullaryExpression #//LiteralExpression #//BooleanExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="TrueExpression" eSuperTypes="#//BooleanLiteralExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="FalseExpression" eSuperTypes="#//BooleanLiteralExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="ArrayLiteralExpression" eSuperTypes="#//LiteralExpression #//EnumerableExpression #//MultiaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="IntegerRangeLiteralExpression" eSuperTypes="#//LiteralExpression #//EnumerableExpression #//BinaryExpression">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="leftInclusive" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="rightInclusive" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RecordLiteralExpression" eSuperTypes="#//LiteralExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="typeDeclaration" eType="#//TypeDeclaration"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="fieldAssignments" upperBound="-1"
        eType="#//FieldAssignment" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteralExpression" eSuperTypes="#//NullaryExpression #//LiteralExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="typeReference" lowerBound="1"
        eType="#//TypeReference" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="reference" lowerBound="1"
        eType="#//EnumerationLiteralDefinition"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InfinityExpression" eSuperTypes="#//ArithmeticLiteralExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="FieldAssignment">
    <eStructuralFeatures xsi:type="ecore:EReference" name="reference" lowerBound="1"
        eType="#//FieldReferenceExpression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" lowerBound="1" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceExpression" abstract="true"
      eSuperTypes="#//NullaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="DirectReferenceExpression" eSuperTypes="#//ReferenceExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="declaration" eType="#//Declaration"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AccessExpression" abstract="true" eSuperTypes="#//ReferenceExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="operand" ordered="false"
        eType="#//Expression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AssignableAccessExpression" eSuperTypes="#//AccessExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="ArrayAccessExpression" eSuperTypes="#//AssignableAccessExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="index" lowerBound="1" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RecordAccessExpression" eSuperTypes="#//AssignableAccessExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="fieldReference" lowerBound="1"
        eType="#//FieldReferenceExpression" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FieldReferenceExpression" eSuperTypes="#//ReferenceExpression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="fieldDeclaration" lowerBound="1"
        eType="#//FieldDeclaration"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NonAssignableAccessExpression" eSuperTypes="#//AccessExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="FunctionAccessExpression" eSuperTypes="#//NonAssignableAccessExpression #//ArgumentedElement"/>
  <eClassifiers xsi:type="ecore:EClass" name="SelectExpression" eSuperTypes="#//NonAssignableAccessExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="IfThenElseExpression" eSuperTypes="#//Expression">
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" lowerBound="1"
        eType="#//Expression" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="then" lowerBound="1" eType="#//Expression"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="else" lowerBound="1" eType="#//Expression"
        containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NotExpression" eSuperTypes="#//BooleanExpression #//UnaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="ForallExpression" eSuperTypes="#//QuantifierExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="ExistsExpression" eSuperTypes="#//QuantifierExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="ImplyExpression" eSuperTypes="#//BooleanExpression #//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="OrExpression" eSuperTypes="#//BooleanExpression #//MultiaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="AndExpression" eSuperTypes="#//BooleanExpression #//MultiaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="XorExpression" eSuperTypes="#//BooleanExpression #//MultiaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="EquivalenceExpression" abstract="true"
      eSuperTypes="#//PredicateExpression #//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="EqualityExpression" eSuperTypes="#//EquivalenceExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="InequalityExpression" eSuperTypes="#//EquivalenceExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="ComparisonExpression" abstract="true"
      eSuperTypes="#//PredicateExpression #//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="GreaterExpression" eSuperTypes="#//ComparisonExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="GreaterEqualExpression" eSuperTypes="#//ComparisonExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="LessExpression" eSuperTypes="#//ComparisonExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="LessEqualExpression" eSuperTypes="#//ComparisonExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="AddExpression" eSuperTypes="#//ArithmeticExpression #//MultiaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="SubtractExpression" eSuperTypes="#//ArithmeticExpression #//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="MultiplyExpression" eSuperTypes="#//ArithmeticExpression #//MultiaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="DivideExpression" eSuperTypes="#//ArithmeticExpression #//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="DivExpression" eSuperTypes="#//ArithmeticExpression #//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="ModExpression" eSuperTypes="#//ArithmeticExpression #//BinaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="UnaryMinusExpression" eSuperTypes="#//ArithmeticExpression #//UnaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="UnaryPlusExpression" eSuperTypes="#//ArithmeticExpression #//UnaryExpression"/>
  <eClassifiers xsi:type="ecore:EClass" name="ParameterDeclarationAnnotation" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="InternalParameterDeclarationAnnotation"
      eSuperTypes="#//ParameterDeclarationAnnotation"/>
  <eClassifiers xsi:type="ecore:EClass" name="VariableDeclarationAnnotation" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="InternalVariableDeclarationAnnotation"
      eSuperTypes="#//VariableDeclarationAnnotation"/>
  <eClassifiers xsi:type="ecore:EClass" name="TransientVariableDeclarationAnnotation"
      eSuperTypes="#//VariableDeclarationAnnotation"/>
  <eClassifiers xsi:type="ecore:EClass" name="ResettableVariableDeclarationAnnotation"
      eSuperTypes="#//VariableDeclarationAnnotation"/>
  <eClassifiers xsi:type="ecore:EClass" name="FinalVariableDeclarationAnnotation"
      eSuperTypes="#//VariableDeclarationAnnotation"/>
  <eClassifiers xsi:type="ecore:EClass" name="EnvironmentResettableVariableDeclarationAnnotation"
      eSuperTypes="#//VariableDeclarationAnnotation"/>
  <eClassifiers xsi:type="ecore:EClass" name="ClockVariableDeclarationAnnotation"
      eSuperTypes="#//VariableDeclarationAnnotation"/>
  <eClassifiers xsi:type="ecore:EClass" name="ScheduledClockVariableDeclarationAnnotation"
      eSuperTypes="#//VariableDeclarationAnnotation"/>
</ecore:EPackage>
