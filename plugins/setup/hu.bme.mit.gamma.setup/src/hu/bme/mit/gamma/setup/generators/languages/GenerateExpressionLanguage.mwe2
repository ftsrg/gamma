/********************************************************************************
 * Copyright (c) 2018-2021 Contributors to the Gamma project
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * SPDX-License-Identifier: EPL-1.0
 ********************************************************************************/
module hu.bme.mit.gamma.setup.generators.languages.GenerateExpressionLanguage

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.eclipse.emf.mwe.utils.*
import org.eclipse.emf.ecore.resource.impl.*

var repositoryRootPath = "../.."
var rootPath = "${repositoryRootPath}/core"

Workflow {
	bean = ResourceSetImpl : resourceSet {}
    bean = StandaloneSetup { resourceSet = resourceSet
    	platformUri = "${rootPath}"
    	scanClassPath = true
    }
    
    component = org.eclipse.emf.mwe.utils.DirectoryCleaner {
        directory = "${rootPath}/hu.bme.mit.gamma.expression.language/src-gen"
    }
    
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "hu.bme.mit.gamma.expression.language"
				rootPath = rootPath
				eclipsePlugin = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			name = "hu.bme.mit.gamma.expression.language.ExpressionLanguage"
			fileExtensions = "gct"
			referencedResource = "platform:/resource/hu.bme.mit.gamma.expression.model/model/expression.genmodel"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
		}
	}
}
